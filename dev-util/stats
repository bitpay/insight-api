

first 5%

  => with data + mongo + w/RPC for blocks: 48.8s
  => with RPC + mongo: 2m26s
  => with files + mongo + wo/RPC for blocks: 36.7s
  => with files + mongo + wo/RPC for blocks + wo/mongoIndexes: 


first 10%

  => sin RPC, sin Tx, sin store block => 0.7s
  => sin RPC, sin grabar, procesando TX => 8.5s
  => sin RPC, sin TX processing, sin grabar => 12s28
  => con RPC, TX processing, sin Grabar Tx, grabando bloques => 29s
  => con RPC, sin TX processing, sin Grabar Tx, grabando bloques => 35s
  => con RPC,  TX processing, sin Grabar Tx, grabando bloques => 43s

  => TX processing, sin RPC, sin saves TX, y blocks => 11.6s
  => TX processing, CON RPC, sin saves TX, y blocks => 35s
  => con RPC,  TX processing, sin saves TX => 45s
  => con RPC,  TX processing, Grabarndo todo => 78s
  => con RPC,  TX processing, Grabarndo todo => 78s
    (18k blocks, 36k txouts)

//LEVEL DB
  => sin RPC,  TX processing, todo en level => 14s
  => con RPC,  TX processing, todo en level => 39.7s
  => con RPC,  TX processing, tx mongo, blocks en level => 64s


  => sin RPC,  TX processing, todo en level, handling REORGs, more data => 28s
  => sin RPC,  TX processing, todo en level, handling REORGs, more data, tx ts => 34t s


//FROM blk00002.dat (more txs), 5%

  => now total : 1m13s
  => removing block writes => 1m8s
  => sacando los contenidos adentro de getblock from file de  => 4.5s!!

  => con base58 cpp => 21s
  => toda la testnet => 17m

10% de blk2
  => 50s con base58cpp
  => 41s commentando todo addr
  => 5s commentando todo get HistoricSync.prototype.getBlockFromFile = function(cb) {
  => 15s commentando todo get HistoricSync.prototype.getBlockFromFile = function(cb) {

10% de blk 1
  => 59s
  => 15s comentando desde b.getStandardizedObject()
  => 39s comentando dps b.getStandardizedObject()

